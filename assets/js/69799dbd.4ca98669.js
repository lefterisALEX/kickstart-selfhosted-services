"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[989],{182:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/infisical-universal-auth-697ed9dc488f9bd34908672001589876.png"},455:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/api-key-1-fcf8dfb50ce4a0fc3ccd6aca8e57c2e3.png"},681:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/infisical-create-client-secret-5a097144cc22f30e5ba6bcfddd10dc92.png"},1044:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/iam-provider-3bf49c4b0e62a8e90132f84cfc31f618.png"},1095:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/infisical-project-id-8e30279cbc39cf7b26a77e3873d8ebb4.png"},1107:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/iam-role-select-policy-1af34e9b5c3bc762821f24f81c4ca5a6.png"},1284:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/action-passed-570c839c31a6b8262da7192d6aa7d7cc.png"},1349:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/upload-ssh-0f7c229593130302906954ff74a6f2a9.png"},1518:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/tailscale-auth-key-87dcfceefca05311c164dd754cdc17cc.png"},1579:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/aws-oidc-role-7a61228c549d9bd8367a6a07a631ccbc.png"},2285:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/infisical-create-identity-3339ad9d7ba485e20c35a1fa371c0b8b.png"},2757:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/github-deploy-2-9067db46eb8f753859e92d6c135a0632.png"},2986:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/hetzner-server-runs-d6eeaa4fbb0377e79498433d22053130.png"},3420:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/api-key-2-d78d493e5571aee56130acc6a251ec8b.png"},3538:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/github-infisical-client-secret-a5cb33490cf0a7a352708ea09a744537.png"},3607:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/infisical-client-id-10b9455e908d5f313a70e280a5394a4a.png"},3659:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/use-template-5a4fd7e3a1be9aaf55bde8dc3c76e749.png"},3833:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/tailscale-connected-522f7d115a978c152a88eb9afa8e3cf5.png"},4131:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/iam-role-9bc82bbf50e98f8e0d8d31fce3b707a8.png"},4195:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/infisical-project-1-1eabfee1b67781aad8034c808e53e921.png"},5294:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/oidc-github-428ac3c7ff5aebf53f0b2ca99d3077ac.png"},6111:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/tailscale-auth-key-2-f589c337b792c72dc2efb0c3ba33fa94.png"},6595:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ssh-key-3b8b2c5eb9a353a5af0c7129f813b2f0.png"},7336:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/infisical-project-2-046666f80f3ab62a49b0a7ada396efdd.png"},7901:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/iam-policy-57643a2fd32909b5f0a7cfee583ab072.png"},8394:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/infisical-add-client-secret-ee5b47cb5d129e8bbfaebc18583d9d79.png"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},9709:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/github-set-variables-f31c9eab0e6ed15594e34839343f344d.png"},9957:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Setup/preparation","title":"Preparation","description":"The following guide is going though the required preparation steps that you will need before you first run your pipeline to deploy your selfhosted services.","source":"@site/docs/Setup/preparation.md","sourceDirName":"Setup","slug":"/Setup/preparation","permalink":"/kickstart-selfhosted-services/Setup/preparation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Setup","permalink":"/kickstart-selfhosted-services/category/setup"},"next":{"title":"test","permalink":"/kickstart-selfhosted-services/category/test"}}');var t=s(4848),r=s(8453);const o={sidebar_position:1},a="Preparation",c={},d=[{value:"Github",id:"github",level:2},{value:"Hetzner",id:"hetzner",level:2},{value:"Tailscale",id:"tailscale",level:2},{value:"AWS",id:"aws",level:2},{value:"Deploy",id:"deploy",level:2},{value:"Infisical",id:"infisical",level:2},{value:"Cloudflare",id:"cloudflare",level:2},{value:"Configuration Options",id:"configuration-options",level:2}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"preparation",children:"Preparation"})}),"\n",(0,t.jsx)(n.p,{children:"The following guide is going though the required preparation steps that you will need before you first run your pipeline to deploy your selfhosted services."}),"\n",(0,t.jsx)(n.h2,{id:"github",children:"Github"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Go to ",(0,t.jsx)(n.a,{href:"https://github.com/lefterisALEX/kickstart-selfhosted-services",children:"kickstart-selfhosted-services"}),' repository and press "Use this template" to create a new repository based on this template repository.']}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(3659).A+"",width:"1442",height:"525"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Clone the new repository to your laptop/desktop."}),"\n",(0,t.jsxs)(n.li,{children:["In your newly created repository generate an ",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-fine-grained-personal-access-token",children:"Access Token"})," that gives access with the following permissions to your new repository only."]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Contents (Read) -- This is required to clone your repository in your Hetzner Server."}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsxs)(n.li,{children:["Finally store the token as a ",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions#creating-secrets-for-a-repository",children:"GitHub secret"})," in your repository under the name ",(0,t.jsx)(n.code,{children:"GH_TOKEN"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"hetzner",children:"Hetzner"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"In Hetzner Console create a new project and give it a name of your choice."}),"\n",(0,t.jsx)(n.li,{children:"In this project under Security upload your SSH public key."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(6595).A+"",width:"1442",height:"781"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(1349).A+"",width:"1442",height:"828"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Naming the SSH key main will not require changes in the terraform module since is the default key which will be looked up."})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["In this project under Security -> API Tokens generate a new API token with Read & Write permissions\nStore the token as a ",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions#creating-secrets-for-a-repository",children:"GitHub secret"})," in your repository under the name ",(0,t.jsx)(n.code,{children:"HCLOUD_TOKEN"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(455).A+"",width:"1442",height:"828"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(3420).A+"",width:"1442",height:"828"})}),"\n",(0,t.jsx)(n.h2,{id:"tailscale",children:"Tailscale"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["If you want other people to use your services is better to create a ",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/organizations/collaborating-with-groups-in-organizations/creating-a-new-organization-from-scratch",children:"github organization"}),", and invite those people in that organization."]})}),"\n",(0,t.jsxs)(n.p,{children:["Login to ",(0,t.jsx)(n.a,{href:"https://login.tailscale.com/",children:"tailscale"})," using Github as Identity Provider (select then the organization if you created).",(0,t.jsx)(n.br,{}),"\n","Navigate to ",(0,t.jsx)(n.code,{children:"Settings -> Personal Settings -> Keys"})," and press ",(0,t.jsx)(n.strong,{children:"Generate an auth key"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(1518).A+"",width:"1442",height:"828"})}),"\n",(0,t.jsx)(n.p,{children:"In the options choose to be reusable and ephemeral."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(6111).A+"",width:"1442",height:"828"})}),"\n",(0,t.jsxs)(n.p,{children:["Store the token as a ",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions#creating-secrets-for-a-repository",children:"GitHub secret"})," in your repository under the name ",(0,t.jsx)(n.code,{children:"TAILSCALE_AUTH_KEY"})]}),"\n",(0,t.jsx)(n.h2,{id:"aws",children:"AWS"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["AWS S3 is used as backend to store the terraform state. If you preffer a different backend please refer to  ",(0,t.jsx)(n.a,{href:"https://terragrunt.gruntwork.io/docs/features/state-backend/",children:"terragrunt"})," documentation.\nYou will need to modify the remote_state code in the parent ",(0,t.jsx)(n.code,{children:"terrarunt.hcl"})," file."]})}),"\n",(0,t.jsxs)(n.p,{children:["To allow github runners to store/retrieve the state in our AWS account we do it using ",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/actions/security-for-github-actions/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services",children:"OpenID Connect"})]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create the three required variables in github which will be used to create an AWS S3 bucket to store the terraform state."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"AWS_ACCOUNT_ID"})," -> Your AWS ACCOUNT ID.",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"AWS_REGION"}),"  -> The AWS Region you want the bucket to be created.",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"AWS_S3_BUCKET"})," -> The AWS S3 bucket name."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(9709).A+"",width:"1592",height:"920"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Create an IAM Policy with the following permissions attached."}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Do not forget to replace the Resource strings to include your bucket name from the previous step."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Sid": "VisualEditor1",\n            "Effect": "Allow",\n            "Action": [\n                "s3:*",\n                "s3:CreateBucket"\n            ],\n            "Resource": [\n                "arn:aws:s3:::terraform-state-kickstart-demo/*", \n                "arn:aws:s3:::terraform-state-kickstart-demo*"\n            ]\n        }\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(7901).A+"",width:"1507",height:"893"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["Create a new IAM Role called ",(0,t.jsx)(n.strong,{children:"github-oidc"})," with the following ",(0,t.jsx)(n.strong,{children:"Custom Trust Policy"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Effect": "Allow",\n            "Principal": {\n                "Federated": "arn:aws:iam::123456789000:oidc-provider/token.actions.githubusercontent.com"\n            },\n            "Action": "sts:AssumeRoleWithWebIdentity",\n            "Condition": {\n                "StringEquals": {\n                    "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"\n                },\n                "StringLike": {\n                    "token.actions.githubusercontent.com:sub": [\n                        "repo:homelabs757/my-selfhosted-services:*"\n                    ]\n                }\n            }\n        }\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Replace the AWS Account ID in Principal with your AWS account ID and also the repository with your own repository."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(4131).A+"",width:"1507",height:"893"})}),"\n",(0,t.jsxs)(n.p,{children:["Press next and in the ",(0,t.jsx)(n.strong,{children:"Add Permissions"})," select the IAM policy you created earlier. Give a new to the IAM role and press Create.\n",(0,t.jsx)(n.img,{src:s(1107).A+"",width:"1507",height:"893"})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Make sure the name of the role is ",(0,t.jsx)(n.strong,{children:"github-oidc"})," otherwise is not going to work."]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(1579).A+"",width:"1263",height:"844"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:['Create a new Identity Provider of type "OpenID Connect" with the following Provider URL and Audience.',(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Provider URL:"})," ",(0,t.jsx)(n.code,{children:"https://token.actions.githubusercontent.com"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Audience:"})," ",(0,t.jsx)(n.code,{children:"sts.amazonaws.com"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{src:s(1044).A+"",width:"1507",height:"893"}),"\n",(0,t.jsx)(n.img,{src:s(5294).A+"",width:"1507",height:"893"})]}),"\n",(0,t.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,t.jsxs)(n.p,{children:["You can deploy now the instance by running the github action.\n",(0,t.jsx)(n.img,{src:s(2757).A+"",width:"1631",height:"919"})]}),"\n",(0,t.jsx)(n.p,{children:"If all above steps are done properly the pipeline should be executed without issues."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(1284).A+"",width:"1592",height:"920"})}),"\n",(0,t.jsx)(n.p,{children:"If you login to tailscale you should be able to see your server be registered and connected to the tailscale network."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(3833).A+"",width:"1592",height:"920"})}),"\n",(0,t.jsx)(n.p,{children:"Also in Hetzner you should be able to see the server running."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(2986).A+"",width:"1786",height:"650"})}),"\n",(0,t.jsx)(n.h2,{id:"infisical",children:"Infisical"}),"\n",(0,t.jsx)(n.p,{children:"There are stored all secrets related with your applications."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a project and save the project ID as github secret with name ",(0,t.jsx)(n.code,{children:"INFISICAL_PROJECT_ID"}),"\n",(0,t.jsx)(n.img,{src:s(1095).A+"",width:"1638",height:"919"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Navigate to ",(0,t.jsx)(n.code,{children:"Admin"})," -> ",(0,t.jsx)(n.code,{children:"Access Control"})," -> ",(0,t.jsx)(n.code,{children:"Identities"})," .",(0,t.jsx)(n.br,{}),"\n",'Press "Create Identity" and select as ',(0,t.jsx)(n.code,{children:"Member"})," as Role\n",(0,t.jsx)(n.img,{src:s(2285).A+"",width:"1638",height:"919"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Press ",(0,t.jsx)(n.code,{children:"Universal Auth"})," and then press ",(0,t.jsx)(n.code,{children:"Add client secret"}),". Give it a name and press Create. Save the generated client secret as github secret with name ",(0,t.jsx)(n.code,{children:"INFISICAL_CLIENT_SECRET"}),"\n",(0,t.jsx)(n.img,{src:s(182).A+"",width:"1631",height:"919"}),"\n",(0,t.jsx)(n.img,{src:s(8394).A+"",width:"1631",height:"919"}),"\n",(0,t.jsx)(n.img,{src:s(681).A+"",width:"1631",height:"919"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Copy the ",(0,t.jsx)(n.code,{children:"Client ID"})," and save it as github secret with name ",(0,t.jsx)(n.code,{children:"INFISICAL_CLIENT_ID"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.img,{src:s(3607).A+"",width:"1631",height:"919"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Now you should have 3 new secrets stored in github related with Infisical."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(3538).A+"",width:"1631",height:"919"})}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsxs)(n.li,{children:["Assign the new identity as Project Viewer\n",(0,t.jsx)(n.img,{src:s(4195).A+"",width:"1631",height:"919"}),"\n",(0,t.jsx)(n.img,{src:s(7336).A+"",width:"1631",height:"919"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"cloudflare",children:"Cloudflare"}),"\n",(0,t.jsx)(n.p,{children:"You will need to have a domain (or subdomain) with an A record pointing to your Private IP of your hetzner server.\nAdditionally LetsEncrypt is managing the rotation of the TLS certificate , using DNS challenge."}),"\n",(0,t.jsx)(n.p,{children:"If you do not have a domain already some cheap options are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:".ovh domain (~3$/year)"}),"\n",(0,t.jsx)(n.li,{children:"A numeric .xyz domain (~1$/year)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You need first to let Cloudflare manage your DNS record."}),"\n",(0,t.jsx)(n.p,{children:"For that you will need to create an API token with the following permissions for your zone."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Got to Profile -> API Tokens -> Create Token > Create Custom Token"}),"\n",(0,t.jsx)(n.li,{children:"Add Permissions Zone -> Zone -> Read & Zone -> DNS -> Edit . Then select specific zone  and select your domain and press Continiu to Summary."}),"\n",(0,t.jsxs)(n.li,{children:["Take the generated API token and place it in infisical in a new directlry called traefik. The secret name should be ",(0,t.jsx)(n.code,{children:"CF_DNS_API_TOKEN"})," and the value the token that was generated in cloudflare."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsxs)(n.p,{children:["All configuration options for each module are available in the ",(0,t.jsx)(n.code,{children:"terragrunt.hcl"})," file of each module.",(0,t.jsx)(n.br,{}),"\n","Explanations of the options are provided as comments above the options.",(0,t.jsx)(n.br,{}),"\n","For infrastructure:  ",(0,t.jsx)(n.code,{children:"infra/terragrunt.hcl"}),(0,t.jsx)(n.br,{}),"\n","For containers-host:  ",(0,t.jsx)(n.code,{children:"containers-host/terragrunt.hcl"})]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);